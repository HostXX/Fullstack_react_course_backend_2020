{"version":3,"sources":["components/persons.js","components/Notification.js","components/SummitForm.js","components/Search.js","services/dbService.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","item","key","id","className","name","phone","onClick","Notification","message","type","SummitForm","props","onSubmit","onFormSummit","htmlFor","value","onChange","onNameChangue","onPhonechangue","Search","onSearch","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filtered","setFiltered","errorMessage","setErrorMessage","useEffect","DB","console","log","reverse","e","keyword","target","toLowerCase","filter","indexOf","event","preventDefault","setTimeout","personObject","person","length","window","confirm","personToUpdateObject","find","n","updatedPerson","catch","error","newPerson","concat","num","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2850a108.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({persons,deletePerson}) => {\n  return persons.map((item) => {\n    return (\n      <div key={item.id} className=\"person\">\n      <p>Name: </p> {item.name} <p>phone: </p>{item.phone}\n      \n      <button onClick={deletePerson(item.name, item.id)}>Delete</button>\n    </div>\n    );\n  });\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={message?.type === 'error' ? 'error-notification' : 'notification' }>{message?.message}</div>;\n};\n\nexport default Notification;\n","import React from 'react'\n\nconst SummitForm = props => {\n  return (\n    <div className={'submit-form'}>\n     \n        <form onSubmit={props.onFormSummit}>\n          <label htmlFor={'person_name'}>name:</label>{' '}\n          <input\n            id={'person_name'}\n            value={props.name}\n            onChange={props.onNameChangue}\n          />\n          <label htmlFor={'phone_num'}>phone:</label>{' '}\n          <input\n            id={'phone_num'}\n            value={props.phone}\n            onChange={props.onPhonechangue}\n          />\n          <button type='submit'>add</button>\n        </form>\n     \n    </div>\n  )\n}\n\nexport default SummitForm\n","import React from 'react'\n\nconst Search = props => {\n  return (\n    <>\n      <div className='search'>\n        <label htmlFor={'search-term'}>Search name:</label>\n        <input id={'search-term'} onChange={props.onSearch} />\n      </div>\n    </>\n  )\n}\n\nexport default Search\n","import axios from 'axios'\n\n// const PORT = process.env.REACT_APP_PORT_API\n// console.log(PORT);\nconst baseUrl = `/api/person`\n// const baseUrl2 = 'https://thephonebooks.herokuapp.com/api/person'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deletePerson\n}\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/persons'\nimport Notification from './components/Notification'\nimport SummitForm from './components/SummitForm'\nimport Search from './components/Search'\nimport DB from './services/dbService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filtered, setFiltered] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleNameChangue = e => {\n    setNewName(e.target.value)\n    console.log(newName)\n  }\n\n  const handlePhoneChange = e => {\n    const num = e.target.value\n    setNewPhone(num)\n  }\n\n  const handleSummit = event => {\n    event.preventDefault()\n    if (newName === '' || newPhone === '') {\n      console.log(\"Alert: Name or phone can't be empty\")\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n      return setErrorMessage({\n        message: `Name or phone are missing`,\n        type: 'error'\n      })\n    }\n\n    // if (newPhone.length < 10) {\n    //   console.log('Alert: Phone is of invalid lenght')\n    //   setTimeout(() => {\n    //     setErrorMessage(null)\n    //   }, 3000)\n    //   return setErrorMessage({ message: `Phone too short or invalid`, type: 'error' })\n    // }\n    \n    const personObject = {\n      name: newName.toLowerCase(),\n      phone: newPhone,\n    }\n\n    if (\n      persons.filter(person => person.name === personObject.name).length > 0\n    ) {\n      if (\n        window.confirm(\n          `${personObject.name} is already in the phonebook, do you want to update the phone?`\n        )\n      ) {\n        const personToUpdateObject = persons.find(n => n.name === newName)\n        \n        DB.update(personToUpdateObject.id, {\n          ...personToUpdateObject,\n          phone: newPhone\n        })\n          .then(updatedPerson => {\n            setPersons(\n              persons.map(n => (n.name === newName ? updatedPerson : n))\n            )\n            setErrorMessage({\n              message: `the phone of ${personObject.name} has changed`,\n              type: 'notification'\n            })\n            setNewName('')\n            setNewPhone('')\n\n          })\n          .catch(error => {\n            console.log(error.response.data.message)\n            setErrorMessage({\n              message: `${error.response.data.message}`,\n              type: 'error'\n            })\n          })\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      }\n    } else {\n      DB.create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson).reverse())\n          setErrorMessage({\n            message: `Added ${personObject.name}`,\n            type: 'notification'\n          })\n          setNewName('')\n          setNewPhone('')\n        })\n        .catch(error => {\n          setErrorMessage({\n            message: `${error.response.data.message}`,\n            type: 'error'\n          })\n         \n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleSearch = e => {\n    let keyword = e.target.value.toLowerCase()\n    let filter = persons.filter(item => {\n      return item.name.indexOf(keyword) > -1\n    })\n    setFiltered([])\n    setFiltered(filter)\n  }\n\n  // clousure to be able to access each item scope at cration time\n  const handleDeletePerson = (name, id) => () => {\n    if (window.confirm(`Do you want to delete ${name} ?`)) {\n      DB.deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== id))\n          setErrorMessage({\n            message: `Deleted ${name}`,\n            type: 'notification'\n          })\n        })\n        .catch(error => {\n          console.log(error)\n          // here you refresh the state to remove the person that is not in the backend db\n          setPersons(persons.filter(n => n.id !== id))\n          // in case you try to delete a person that is already deleted show the message\n          setErrorMessage({\n            message: `The user ${name} was deleted from the server already.`,\n            type: 'error'\n          })\n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  useEffect(() => {\n    DB.getAll().then(response => {\n      console.log(response)\n      setPersons(response.reverse())\n    })\n  }, [])\n\n  return (\n    <div className={'app-container'}>\n      <Notification message={errorMessage} />\n      <Search onSearch={handleSearch} />\n      <h2>Phonebook</h2>\n      <SummitForm\n        name={newName}\n        phone={newPhone}\n        onFormSummit={handleSummit}\n        onPhonechangue={handlePhoneChange}\n        onNameChangue={handleNameChangue}\n      />\n      <h2>List of persons with phones</h2>\n      <Persons\n        persons={filtered.length === 0 ? persons : filtered}\n        deletePerson={handleDeletePerson}\n      ></Persons>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}