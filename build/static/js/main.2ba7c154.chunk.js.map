{"version":3,"sources":["components/persons.js","components/Notification.js","components/SummitForm.js","components/Search.js","services/dbService.js","App.js","index.js"],"names":["Person","deletePerson","person","id","phone","className","toUpperCase","onClick","Persons","persons","map","item","key","name","Notification","message","type","SummitForm","props","onSubmit","onFormSummit","htmlFor","value","onChange","onNameChangue","onPhonechangue","Search","onSearch","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newPhone","setNewPhone","filtered","setFiltered","errorMessage","setErrorMessage","useEffect","DB","console","log","reverse","e","keyword","target","toLowerCase","filter","indexOf","event","preventDefault","setTimeout","length","personObject","Math","floor","random","window","confirm","personToUpdateObject","find","n","updatedPerson","catch","error","concat","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ba7c154.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({persons,deletePerson}) => {\n  return persons.map((item) => {\n    return (\n      <Person\n        key={item.id}\n        id={item.id}\n        person={item.name}\n        phone={item.phone}\n        deletePerson={deletePerson}\n      />\n    );\n  });\n};\n\nconst Person = ({deletePerson, person,id,phone}) => {\n  return (\n    <>\n      <div className=\"person\">\n        <p>Name: </p> {person.toUpperCase()} <p>phone: </p>{phone.toUpperCase()}\n        \n        <button onClick={deletePerson(person, id)}>Delete</button>\n      </div>\n    </>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={message?.type === 'error' ? 'error-notification' : 'notification' }>{message?.message}</div>;\n};\n\nexport default Notification;\n","import React from 'react'\n\nconst SummitForm = props => {\n  return (\n    <div className={'submit-form'}>\n     \n        <form onSubmit={props.onFormSummit}>\n          <label htmlFor={'person_name'}>name:</label>{' '}\n          <input\n            id={'person_name'}\n            value={props.name}\n            onChange={props.onNameChangue}\n          />\n          <label htmlFor={'phone_num'}>phone:</label>{' '}\n          <input\n            id={'phone_num'}\n            value={props.phone}\n            onChange={props.onPhonechangue}\n          />\n          <button type='submit'>add</button>\n        </form>\n     \n    </div>\n  )\n}\n\nexport default SummitForm\n","import React from 'react'\n\nconst Search = props => {\n  return (\n    <>\n      <div className='search'>\n        <label htmlFor={'search-term'}>Search name:</label>\n        <input id={'search-term'} onChange={props.onSearch} />\n      </div>\n    </>\n  )\n}\n\nexport default Search\n","import axios from 'axios'\n\n// const PORT = process.env.REACT_APP_PORT_API\n// console.log(PORT);\nconst baseUrl = `/api/person`\n// const baseUrl2 = 'https://thephonebooks.herokuapp.com/api/person'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update,\n  deletePerson\n}\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/persons'\nimport Notification from './components/Notification'\nimport SummitForm from './components/SummitForm'\nimport Search from './components/Search'\nimport DB from './services/dbService'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [filtered, setFiltered] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const handleNameChangue = e => {\n    setNewName(e.target.value)\n    console.log(newName)\n  }\n\n  const handlePhoneChange = e => {\n    setNewPhone(e.target.value)\n    console.log(newPhone)\n  }\n\n  const handleSummit = event => {\n    event.preventDefault()\n    if (newName === '' || newPhone === '') {\n      console.log(\"Alert: Name or phone can't be empty\")\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n      return setErrorMessage({\n        message: `Name or phone are missing`,\n        type: 'error'\n      })\n    }\n\n    if (newPhone.length < 10) {\n      console.log('Alert: Phone is of invalid lenght')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n      return setErrorMessage({ message: `Phone too short`, type: 'error' })\n    }\n    const personObject = {\n      name: newName.toLowerCase(),\n      phone: newPhone,\n      id: Math.floor(Math.random() * 101)\n    }\n\n    if (\n      persons.filter(person => person.name === personObject.name).length > 0\n    ) {\n      if (\n        window.confirm(\n          `${personObject.name} is already in the phonebook, do you want to update the phone?`\n        )\n      ) {\n        const personToUpdateObject = persons.find(n => n.name === newName)\n        DB.update(personToUpdateObject.id, {\n          ...personToUpdateObject,\n          phone: newPhone\n        })\n          .then(updatedPerson => {\n            setPersons(\n              persons.map(n => (n.name === newName ? updatedPerson : n))\n            )\n          })\n          .catch(error => {\n            console.log(error)\n            setErrorMessage({ message: `Error during update`, type: 'error' })\n          })\n        setPersons(persons.concat(personObject))\n        setErrorMessage({\n          message: `the phone of ${personObject.name} has changed`,\n          type: 'notification'\n        })\n        setNewName('')\n        setNewPhone('')\n\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 3000)\n      }\n    } else {\n      DB.create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson).reverse())\n          setErrorMessage({\n            message: `Added ${personObject.name}`,\n            type: 'notification'\n          })\n          setNewName('')\n          setNewPhone('')\n        })\n        .catch(error => {\n          setErrorMessage(`${error}`)\n          console.log(error)\n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  const handleSearch = e => {\n    let keyword = e.target.value.toLowerCase()\n    let filter = persons.filter(item => {\n      return item.name.indexOf(keyword) > -1\n    })\n\n    setFiltered([])\n    setFiltered(filter)\n  }\n\n  // clousure to be able to access each item scope at cration time\n  const handleDeletePerson = (name, id) => () => {\n    if (window.confirm(`Do you want to delete ${name} ?`)) {\n      DB.deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== id))\n          setErrorMessage({\n            message: `Deleted ${name}`,\n            type: 'notification'\n          })\n        })\n        .catch(error => {\n          console.log(error)\n          // here you refresh the state to remove the person that is not in the backend db\n          setPersons(persons.filter(n => n.id !== id))\n          // in case you try to delete a person that is already deleted show the message\n          setErrorMessage({\n            message: `The user ${name} was deleted from the server already.`,\n            type: 'error'\n          })\n        })\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  useEffect(() => {\n    DB.getAll().then(response => {\n      console.log(response)\n      setPersons(response.reverse())\n    })\n  }, [])\n\n  return (\n    <div className={'app-container'}>\n      <Notification message={errorMessage} />\n      <Search onSearch={handleSearch} />\n      <h2>Phonebook</h2>\n      <SummitForm\n        name={newName}\n        phone={newPhone}\n        onFormSummit={handleSummit}\n        onPhonechangue={handlePhoneChange}\n        onNameChangue={handleNameChangue}\n      />\n      <h2>List of persons with phones</h2>\n      <Persons\n        persons={filtered.length === 0 ? persons : filtered}\n        deletePerson={handleDeletePerson}\n      ></Persons>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}